// Code generated by MockGen. DO NOT EDIT.
// Source: x/electoral/keeper/dependency.go

// Package testutil is a generated GoMock package.
package testutil

import (
	reflect "reflect"

	types "github.com/cosmos/cosmos-sdk/types"
	gomock "github.com/golang/mock/gomock"
)

// MockGentlemintKeeper is a mock of GentlemintKeeper interface.
type MockGentlemintKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockGentlemintKeeperMockRecorder
}

// MockGentlemintKeeperMockRecorder is the mock recorder for MockGentlemintKeeper.
type MockGentlemintKeeperMockRecorder struct {
	mock *MockGentlemintKeeper
}

// NewMockGentlemintKeeper creates a new mock instance.
func NewMockGentlemintKeeper(ctrl *gomock.Controller) *MockGentlemintKeeper {
	mock := &MockGentlemintKeeper{ctrl: ctrl}
	mock.recorder = &MockGentlemintKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGentlemintKeeper) EXPECT() *MockGentlemintKeeperMockRecorder {
	return m.recorder
}

// LoadAllowanceLoader mocks base method.
func (m *MockGentlemintKeeper) LoadAllowanceLoader(ctx types.Context, addr types.AccAddress) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadAllowanceLoader", ctx, addr)
	ret0, _ := ret[0].(error)
	return ret0
}

// LoadAllowanceLoader indicates an expected call of LoadAllowanceLoader.
func (mr *MockGentlemintKeeperMockRecorder) LoadAllowanceLoader(ctx, addr interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadAllowanceLoader", reflect.TypeOf((*MockGentlemintKeeper)(nil).LoadAllowanceLoader), ctx, addr)
}
