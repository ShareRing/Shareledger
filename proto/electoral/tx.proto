syntax = "proto3";
package ShareRing.shareledger.electoral;

import "electoral/acc_state.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/ShareRing/Shareledger/x/electoral/types";

// Msg defines the Msg service.
service Msg {
      rpc EnrollVoter(MsgEnrollVoter) returns (MsgEnrollVoterResponse);
  rpc RevokeVoter(MsgRevokeVoter) returns (MsgRevokeVoterResponse);
  rpc EnrollLoaders(MsgEnrollLoaders) returns (MsgEnrollLoadersResponse);
  rpc RevokeLoaders(MsgRevokeLoaders) returns (MsgRevokeLoadersResponse);
  rpc EnrollIdSigner(MsgEnrollIdSigner) returns (MsgEnrollIdSignerResponse);
  rpc RevokeIdSigner(MsgRevokeIdSigner) returns (MsgRevokeIdSignerResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgEnrollVoter {
  string creator = 1;
  string address = 2;
}

message MsgEnrollVoterResponse {
}

message MsgRevokeVoter {
  string creator = 1;
  string address = 2;
}

message MsgRevokeVoterResponse {
}

message MsgEnrollLoaders {
  string creator = 1;
  string addresses = 2;
}

message MsgEnrollLoadersResponse {
}

message MsgRevokeLoaders {
  string creator = 1;
  string addresses = 2;
}

message MsgRevokeLoadersResponse {
}

message MsgEnrollIdSigner {
  string creator = 1;
  string addresses = 2;
}

message MsgEnrollIdSignerResponse {
}

message MsgRevokeIdSigner {
  string creator = 1;
  string addresses = 2;
}

message MsgRevokeIdSignerResponse {
}

// this line is used by starport scaffolding # proto/tx/message