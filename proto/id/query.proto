syntax = "proto3";
package ShareRing.shareledger.id;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "id/tx.proto";
// import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/ShareRing/Shareledger/x/id/types";

// Query defines the gRPC querier service.
service Query {
    // Balance queries the balance of a single coin for a single account.
    rpc IdByAddress(QueryIdByAddressRequest) returns (QueryIdByAddressResponse) {
        option (google.api.http).get = "/shareledger/id/address/{address}";
    }

    rpc IdById(QueryIdByIdRequest) returns (QueryIdByAddressResponse) {
        option (google.api.http).get = "/shareledger/id/id/{id}";
    }
}

message QueryIdByAddressRequest {
    option (gogoproto.equal)           = false;
    option (gogoproto.goproto_getters) = false;

    // address is the address to query id info for.
    string address = 1;
}

message QueryIdByIdRequest {
    option (gogoproto.equal)           = false;
    option (gogoproto.goproto_getters) = false;

    string id = 1;
}

message QueryIdByAddressResponse {
    // balance is the balance of the coin.
    ID id = 1;
}