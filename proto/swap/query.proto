syntax = "proto3";
package shareledger.swap;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "swap/params.proto";
import "swap/id.proto";
import "swap/request.proto";
import "swap/batch.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/sharering/shareledger/x/swap/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sharering/shareledger/swap/params";
  }

	// Queries a list of Search items.
	rpc Search(QuerySearchRequest) returns (QuerySearchResponse) {
		option (google.api.http).get = "/sharering/shareledger/swap/search/{status}/{id}/{srcAddr}/{destAddr}/{srcNetwork}/{destNetwork}";
	}

// Queries a Batch by id.
	rpc Batch(QueryGetBatchRequest) returns (QueryGetBatchResponse) {
		option (google.api.http).get = "/sharering/shareledger/swap/batch/{id}";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QuerySearchRequest {
  string status = 1;
  uint64 id = 2;
  string srcAddr = 3;
  string destAddr = 4;
  string srcNetwork = 5;
  string destNetwork = 6;
cosmos.base.query.v1beta1.PageRequest pagination = 7;
}

message QuerySearchResponse {
	repeated Request Request = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetBatchRequest {
	uint64 id = 1;
}

message QueryGetBatchResponse {
	Batch Batch = 1 [(gogoproto.nullable) = false];
}
// this line is used by starport scaffolding # 3
