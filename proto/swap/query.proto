syntax = "proto3";
package shareledger.swap;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "cosmos/base/v1beta1/coin.proto";
import "swap/params.proto";
import "swap/request.proto";
import "swap/batch.proto";
import "swap/sign_schema.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/sharering/shareledger/x/swap/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/sharering/shareledger/swap/params";
  }

	// Queries a list of Search items.
	rpc Swap(QuerySwapRequest) returns (QuerySwapResponse) {
		option (google.api.http).get = "/sharering/shareledger/swap/search/{status}/{ids}/{srcAddr}/{destAddr}/{srcNetwork}/{destNetwork}";
	}

// Queries a Batch by id.
	rpc Batch(QueryBatchRequest) returns (QueryBatchResponse) {
		option (google.api.http).get = "/sharering/shareledger/swap/batch/{id}";
	}
	

// Queries a list of Fund items.
	rpc Balance(QueryBalanceRequest) returns (QueryBalanceResponse) {
		option (google.api.http).get = "/sharering/shareledger/swap/balance";
	}

// Queries a Format by index.
	rpc SignSchema(QueryGetSignSchemaRequest) returns (QuerySignSchemaResponse) {
		option (google.api.http).get = "/sharering/shareledger/swap/sign_schema/{network}";
	}

	// Queries a list of Format items.
	rpc AllSignSchemas(QueryAllSignSchemasRequest) returns (QueryAllSignSchemasResponse) {
		option (google.api.http).get = "/sharering/shareledger/swap/sign_schema";
	}

// Queries a list of SearchBatch items.
	rpc SearchBatch(QuerySearchBatchRequest) returns (QuerySearchBatchResponse) {
		option (google.api.http).get = "/sharering/shareledger/swap/search_batch";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QuerySwapRequest {
  string status = 1;
	repeated uint64 ids = 2;
  string srcAddr = 3;
  string destAddr = 4;
  string srcNetwork = 5;
  string destNetwork = 6;
cosmos.base.query.v1beta1.PageRequest pagination = 7;
}

message QuerySwapResponse {
	repeated Request swaps = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryBatchRequest {
	repeated uint64 ids = 1;
}

message QueryBatchResponse {
	repeated Batch batchs = 1 [(gogoproto.nullable) = false];
}

message QueryBalanceRequest {
}

message QueryBalanceResponse {
	cosmos.base.v1beta1.DecCoin balance = 1;
}

message QueryGetSignSchemaRequest {
	  string network = 1;

}

message QuerySignSchemaResponse {
	SignSchema schema = 1 [(gogoproto.nullable) = false];
}

message QueryAllSignSchemasRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllSignSchemasResponse {
	repeated SignSchema schemas = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QuerySearchBatchRequest {
	string status = 1;
cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

message QuerySearchBatchResponse {
	repeated Batch batchs = 1 [(gogoproto.nullable) = false];
cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
