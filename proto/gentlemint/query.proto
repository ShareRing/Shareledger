syntax = "proto3";
package shareledger.gentlemint;

import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "gentlemint/exchange_rate.proto";
import "gentlemint/level_fee.proto";
import "gentlemint/action_level_fee.proto";
// this line is used by starport scaffolding # 1
import "gogoproto/gogo.proto";

option go_package = "github.com/sharering/shareledger/x/gentlemint/types";

// Query defines the gRPC querier service.
service Query {
// Queries a exchangeRate by index.
	rpc ExchangeRate(QueryExchangeRateRequest) returns (QueryExchangeRateResponse) {
		option (google.api.http).get = "/shareledger/gentlemint/exchangeRate";
	}

// Queries a levelFee by index.
	rpc LevelFee(QueryGetLevelFeeRequest) returns (QueryGetLevelFeeResponse) {
		option (google.api.http).get = "/sharering/shareledger/gentlemint/levelFee/{level}";
	}

	// Queries a list of levelFee items.
	rpc LevelFeeAll(QueryAllLevelFeeRequest) returns (QueryAllLevelFeeResponse) {
		option (google.api.http).get = "/sharering/shareledger/gentlemint/levelFee";
	}

// Queries a actionLevelFee by index.
	rpc ActionLevelFee(QueryGetActionLevelFeeRequest) returns (QueryGetActionLevelFeeResponse) {
		option (google.api.http).get = "/sharering/shareledger/gentlemint/actionLevelFee/{action}";
	}

	// Queries a list of actionLevelFee items.
	rpc ActionLevelFeeAll(QueryAllActionLevelFeeRequest) returns (QueryAllActionLevelFeeResponse) {
		option (google.api.http).get = "/sharering/shareledger/gentlemint/actionLevelFee";
	}

// this line is used by starport scaffolding # 2
}

message QueryExchangeRateRequest {}

message QueryExchangeRateResponse {
	string rate = 1;
}

message QueryGetLevelFeeRequest {
	  string level = 1;

}

message QueryGetLevelFeeResponse {
	LevelFee levelFee = 1 [(gogoproto.nullable) = false];
}

message QueryAllLevelFeeRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllLevelFeeResponse {
	repeated LevelFee levelFee = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetActionLevelFeeRequest {
	  string action = 1;

}

message QueryGetActionLevelFeeResponse {
	string action = 1;
	string level = 2;
	string fee = 3;
}

message QueryAllActionLevelFeeRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllActionLevelFeeResponse {
	repeated ActionLevelFee actionLevelFee = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
